import React from "react"
import { graphql } from "gatsby"
import Wrapper from "../components/Wrapper"
import Layout from "../components/Layout"
import styled from "styled-components"
import Newsletter from "../components/Newsletter"

export const Title = styled.div`
  padding: 150px 0 0 0;
  h1 {
    position: relative;
    font-size: 5rem;
    z-index: 2;
    @media screen and (max-width: 768px) {
      font-size: 3rem;
    }
    svg {
      position: absolute;
      left: 0;
      top: -30%;
      z-index: -1;
    }
  }
`

const QualificationsTemplate = ({ data }) => {
  return (
    <Layout>
      <Wrapper>
        <Title>
          <h1>
            {data.allWpAcf.edges[0].node.title}
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="88.599"
              height="129.447"
              viewBox="0 0 88.599 129.447"
            >
              <g
                id="Group_161"
                data-name="Group 161"
                transform="translate(-811.861 -606.122)"
              >
                <path
                  id="Path_126"
                  data-name="Path 126"
                  d="M900.46,631.936c-.223,2.228-.647,3.881-2.042,5.349-1.618,1.7-2.771,3.838-4.268,5.673-1.763,2.163-3.647,4.233-5.535,6.291q-8.053,8.774-16.166,17.491a1.52,1.52,0,0,0-.162,2.113c1.794,3.113,3.584,6.228,5.277,9.4,1.3,2.425,2.423,4.942,3.661,7.4,2.628,5.216,5.361,10.381,7.9,15.638,2.39,4.952,4.86,9.893,6.793,15.027,1.753,4.659,2.828,9.57,4.2,14.37.051.176.186.452.119.518-1.171,1.169-2.357,2.322-3.572,3.443-.114.1-.631-.108-.653-.055-.786,2.083-1.481.24-2.152-.074-.528-.248-1.112-1.278-1.169.291a.842.842,0,0,1-.358.5c-.323-.131-.837-.3-.875-.531-.344-1.964-2.078-2.72-3.207-4.018-.883-1.016-1.081-2.621-1.618-3.952-.956-2.369-1.978-4.712-2.888-7.1-.5-1.3-.676-2.736-1.245-4-1.907-4.227-3.93-8.4-5.894-12.605a6.1,6.1,0,0,1-.277-1,9.46,9.46,0,0,1,.8.578c.289.254.545.545.817.823a8.228,8.228,0,0,0-.346-1.366,18.025,18.025,0,0,0-.893-1.579c-.412-.731-.4-.725-.889-.021a.576.576,0,0,1-.522-.051c-.956-1.526-1.958-3.031-2.787-4.624a41.285,41.285,0,0,1-1.663-4.042.516.516,0,0,1,.121-.446c.575-.5.6-.5.324-1.022q-3.157-6.089-6.328-12.171a1.54,1.54,0,0,0-.274-.473c-.272-.233-.584-.42-.88-.625.1.3.188.606.315.893a4.773,4.773,0,0,1,.36.631.406.406,0,1,1-.651.408c-1.438-1.358-1.735-1.259-2.947.125-2.656,3.029-5.456,5.933-8.136,8.945-2.558,2.871-5.007,5.839-7.561,8.712-1.614,1.814-3.379,3.494-5,5.3-1.405,1.567-2.587,3.346-4.067,4.833-4.9,4.919-9.811,9.826-14.874,14.569a6.612,6.612,0,0,1-6.424,1.325c-.6-.154-1.411.506-2.132.768a6.537,6.537,0,0,1-.834.192c.051-.266.018-.59.162-.788,1.909-2.636,3.844-5.255,5.775-7.876a9.789,9.789,0,0,1,.985-1.266c.18-.176.541-.166.821-.236.242-.061.649-.049.7-.182.829-2.058,2.775-3.205,4.02-4.943,1.253-1.753,3.078-3.084,4.518-4.716,2.922-3.312,5.751-6.705,8.62-10.063a6.925,6.925,0,0,1,1.094-1.231c1.779-1.249,2.1-3.137,2.4-5.075.2-1.329,2.894-4.1,4.172-4.391.287-.065.792-.192.8-.315.111-1.8,1.765-2.2,2.732-3.225.616-.657.6-1.876,1.141-2.644a38.958,38.958,0,0,1,2.707-2.965c1.63-1.853,3.561-3.557,4.687-5.685.512-.969-.6-2.8-.973-4.235-2.869-.7-3.5-3.455-4.036-5.529-.43-1.675-1.714-2.177-2.339-3.383-.7-1.35-1.509-2.648-2.316-3.94-.711-1.137-1.495-2.226-2.232-3.348-2.664-4.057-5.279-8.148-7.993-12.17-3.137-4.649-6.414-9.2-9.517-13.876-1.053-1.585-2.392-3.143-2.14-5.314a2.026,2.026,0,0,0-.393-1c-.215-.4-.836-.917.323-.711.086.014.262-.449.389-.694.254-.489.508-.977.752-1.472.207-.422.664-.936.559-1.263-.5-1.546.594-2.677.956-3.967.4-1.436,1.188-1.468,2.3-.487a7.444,7.444,0,0,0,1.661.811,3.347,3.347,0,0,1,.885.52,54.342,54.342,0,0,1,8.37,11.27c2.5,4.134,5.382,8.036,8.022,12.089,2.5,3.838,4.89,7.747,7.35,11.611,2.715,4.26,5.5,8.476,8.163,12.769,1.7,2.742,1.667,2.83,3.819.571q5.045-5.294,9.981-10.692c2.648-2.879,5.253-5.8,7.856-8.718a17.089,17.089,0,0,0,1.436-1.9,5.379,5.379,0,0,1,4.214-2.492,11.518,11.518,0,0,0,4.175-1.911c1.313-.78,2.312.361,3.483.375C900.178,631.1,900.405,631.842,900.46,631.936Z"
                  transform="translate(0 0)"
                  fill="#68db7e"
                />
              </g>
            </svg>
          </h1>
        </Title>
      </Wrapper>
      <Newsletter />
    </Layout>
  )
}

export default QualificationsTemplate

export const qualificationsQuery = graphql`
  query QualQuery($slug: String!) {
    allWpAcf(filter: { slug: { eq: $slug } }) {
      edges {
        node {
          id
          slug
          title
          flexible {
            content {
              ... on WpAcf_Flexible_Content_Copy {
                copy
                fieldGroupName
              }
              ... on WpAcf_Flexible_Content_CopyAndImage {
                copy
                fieldGroupName
                image {
                  localFile {
                    childImageSharp {
                      fluid(maxWidth: 1200, quality: 90) {
                        ...GatsbyImageSharpFluid_withWebp
                      }
                    }
                  }
                }
              }
              ... on WpAcf_Flexible_Content_Image {
                fieldGroupName
                image {
                  localFile {
                    childImageSharp {
                      fluid(maxWidth: 1200, quality: 90) {
                        ...GatsbyImageSharpFluid_withWebp
                      }
                    }
                  }
                }
              }
              ... on WpAcf_Flexible_Content_ImageAndCopy {
                copy
                fieldGroupName
                image {
                  localFile {
                    childImageSharp {
                      fluid(maxWidth: 1200, quality: 90) {
                        ...GatsbyImageSharpFluid_withWebp
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
`
